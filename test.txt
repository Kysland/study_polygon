09.03.21
11.03.21

package main

import (
	"fmt"
	"net/http"
	"io"
	"encoding/json"
	"flag"
)


type RequestData struct {
	city string
	air bool 
}

//Запрос погоды
func weather_call() {
	fmt.Println("The weather is:")
	
	var R RequestData
	//R.city = "Minsk" //:= RequestData {"Minsk", true}
	flag.StringVar(&R.city, "city", "Minsk", "City name")
	flag.Parse()

	E := new_string (R)
	println(E)
	E1, _ := http.Get(E)
	//E1, _ := http.NewRequest("GET", E, nil)
	println(E1)
	b, _ := io.ReadAll(E1.Body)
	println(string(b))
	pars_w(string(b))
	
}

//Расшифровка json
func pars_w(X string) {
	data := json_trash{}
    json.Unmarshal([]byte(X), &data)
	fmt.Printf("Name: %s\n", data.Location.Name)
    fmt.Printf("Country: %s\n", data.Location.Country)
	fmt.Printf("TempC: %f\n", data.Current.TempC)
	
}

func new_string(X RequestData) string {
	resault := basic_url + X.city + "&aqi=false"
	return resault
}
const (
	basic_url="http://api.weatherapi.com/v1/current.json?key=bad9a9a87de34856b56162637210106&q="
)
//http://api.weatherapi.com/v1/current.json?key=bad9a9a87de34856b56162637210106&q=London&aqi=no"

type json_trash struct {
	Location struct {
		Name           string  `json:"name"`
		Region         string  `json:"region"`
		Country        string  `json:"country"`
		Lat            float64 `json:"lat"`
		Lon            float64 `json:"lon"`
		TzID           string  `json:"tz_id"`
		LocaltimeEpoch int     `json:"localtime_epoch"`
		Localtime      string  `json:"localtime"`
	} `json:"location"`
	Current struct {
		LastUpdatedEpoch int     `json:"last_updated_epoch"`
		LastUpdated      string  `json:"last_updated"`
		TempC            float64 `json:"temp_c"`
		TempF            float64 `json:"temp_f"`
		IsDay            int     `json:"is_day"`
		Condition        struct {
			Text string `json:"text"`
			Icon string `json:"icon"`
			Code int    `json:"code"`
		} `json:"condition"`
		WindMph    float64 `json:"wind_mph"`
		WindKph    float64 `json:"wind_kph"`
		WindDegree int     `json:"wind_degree"`
		WindDir    string  `json:"wind_dir"`
		PressureMb float64 `json:"pressure_mb"`
		PressureIn float64 `json:"pressure_in"`
		PrecipMm   float64 `json:"precip_mm"`
		PrecipIn   float64 `json:"precip_in"`
		Humidity   int     `json:"humidity"`
		Cloud      int     `json:"cloud"`
		FeelslikeC float64 `json:"feelslike_c"`
		FeelslikeF float64 `json:"feelslike_f"`
		VisKm      float64 `json:"vis_km"`
		VisMiles   float64 `json:"vis_miles"`
		Uv         float64 `json:"uv"`
		GustMph    float64 `json:"gust_mph"`
		GustKph    float64 `json:"gust_kph"`
	} `json:"current"`
}

//var flag_city string


func main() {
	//fmt.Println("The weather is:")
	//R := RequestData {"Minsk", true}	
	//E := new_string (R)
	//println(E)
	//E1, _ := http.Get(E)
	//E1, _ := http.NewRequest("GET", E, nil)
	//println(E1)
	//b, _ := io.ReadAll(E1.Body)
	//println(string(b))
	weather_call()
	
}


